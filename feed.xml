<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">

    <channel>
        <title>WildFly Elytron</title>
        <link>https://wildfly-security.github.io/wildfly-elytron</link>
        <description></description>
        <lastBuildDate>Fri, 17 Dec 2021 16:00:41 +0000</lastBuildDate>
        
        <item>
            <title>Upcoming filesystem realm encryption and integrity support in Elytron</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/upcoming-filesystem-encryption-integrity/
            </link>
            <description>
                Two features that we have been working during the WildFly 26 development phase is the ability to encrypt filesystem security realms with a SecretKey, and the ability to verify filesystem integrity with a KeyPair. This feature will be included in a future WildFly release. An Overview of Filesystem Realm Encryption...
            </description>
            <pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/upcoming-filesystem-encryption-integrity/
            </guid>
        </item>
        
        <item>
            <title>Using a JAAS realm in Elytron</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/jaas-realm/
            </link>
            <description>
                The Elytron subsystem already provides various security realms like LDAP realm, JDBC realm, filesystem realm, and others for common use cases. Starting from WildFly 26, you can also configure a JAAS security realm in the Elytron subsystem in order to use custom Login Modules for authentication and authorization. A JAAS...
            </description>
            <pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/jaas-realm/
            </guid>
        </item>
        
        <item>
            <title>Upcoming client side default SSL context provider</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/client-side-jvm-wide-default-sslcontext/
            </link>
            <description>
                Currently it is possible to configure SSL contexts in the Elytron client configuration which can be used by interacting with the Elytron client and its APIs. For future WildFly release we will provide ability to register JVM wide default SSL context that other libraries can obtain without the need to...
            </description>
            <pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/client-side-jvm-wide-default-sslcontext/
            </guid>
        </item>
        
        <item>
            <title>Using failover realm in Elytron</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/failover-realm/
            </link>
            <description>
                With a failover realm you can configure an alternative realm that will be used if primary realm is not available. A common use case is to fail over to a local file based realm if an LDAP or database server has gone down allowing administrators to retain access to the...
            </description>
            <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/failover-realm/
            </guid>
        </item>
        
        <item>
            <title>Using distributed realm in Elytron</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/distributed-realm/
            </link>
            <description>
                With a distributed realm you can combine identities located across multiple security realms of any type into a single security realm. Identities can be used for both authentication and authorization purposes. Add a distributed realm You can add a distributed-realm to the Elytron subsystem by specifying the list of realms...
            </description>
            <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/distributed-realm/
            </guid>
        </item>
        
        <item>
            <title>Open Source Day 2021 Recap</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/open-source-day-recap/
            </link>
            <description>
                A couple weeks ago, the WildFly Elytron team had a great time participating in Open Source Day, an all-day hackathon that took place during the virtual Grace Hopper Celebration (vGHC). This was the WildFly Elytron team&#8217;s second time participating in this event, after having been a part of the recent...
            </description>
            <pubDate>Mon, 18 Oct 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/open-source-day-recap/
            </guid>
        </item>
        
        <item>
            <title>Hacktoberfest Has Begun</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/hacktoberfest-has-begun/
            </link>
            <description>
                The WildFly Elytron project is participating in Hacktoberfest this month and welcomes your contributions! What is Hacktoberfest? Hacktoberfest takes places annually during the month of October. This event encourages open source contributions from the community. To participate in Hacktoberfest, you simply need to: Register on the Hacktoberfest site Submit 4...
            </description>
            <pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/hacktoberfest-has-begun/
            </guid>
        </item>
        
        <item>
            <title>Open Source Day Summer 2021 Recap</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/open-source-day-summer-recap/
            </link>
            <description>
                Last week, the WildFly Elytron team had the pleasure of participating in Open Source Day, an all-day hackathon hosted by the AnitaB.org community. It was the very first time that this event, known as the largest female-led movement in open source, was held outside of the Grace Hopper conference. Participants...
            </description>
            <pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/open-source-day-summer-recap/
            </guid>
        </item>
        
        <item>
            <title>Installing Keycloak OIDC adaptor using the Galleon CLI</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/galleon-cli-keycloak/
            </link>
            <description>
                Traditionally to install WildFly you would download a complete archive of the application server distribution, unzip it locally and run it directly from where it was unzipped. Subsequently to install the Keycloak adaptor for WildFly a second archive would be downloaded and unzipped on top of the WildFly installation and...
            </description>
            <pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/galleon-cli-keycloak/
            </guid>
        </item>
        
        <item>
            <title>Using hash character sets and encodings in Elytron</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/hash-charsets-encodings/
            </link>
            <description>
                In the legacy security configuration using PicketBox, the UsernamePasswordLoginModule supports storing hashed passwords by specifying the hashing algorithm, encoding and character set to compare the client-supplied password to the password stored in the management system. Previously, Elytron supported specifying the hashing algorithm, but not the string encoding or character set...
            </description>
            <pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/hash-charsets-encodings/
            </guid>
        </item>
        
    </channel>
</rss>
